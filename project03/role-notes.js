[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>ContentInfo</footer>\n      <h1>Header</h1>\n      <header>Banner</header>\n      <img alt=\"description\" />\n      <input type=\"checkbox\" />\n      <input type=\"number\" />\n      <input type=\"radio\" />\n      <input type=\"text\" />\n      <li>ListItem</li>\n      <ul>ListGroup</ul>\n    </div>\n  );\n}\n\nrender(<RoleExample />);","type":"code","id":"kz92d"},{"content":"test('can find elements by role', () => {\r\n  render(<RoleExample />)\r\n\r\n  const roles = [\r\n    'link',\r\n    'button',\r\n    'contentinfo',\r\n    'heading',\r\n    'banner',\r\n    'img',\r\n    'checkbox',\r\n    'spinbutton',\r\n    'radio',\r\n    'textbox',\r\n    'listitem',\r\n    'list'\r\n  ]\r\n\r\n  for (role of roles) {\r\n    const el = screen.getByRole(role)\r\n    expect(el).toBeInTheDocument()\r\n  }\r\n})","type":"code","id":"3gfmk"},{"content":"function AccessibleName() {\r\n  return (\r\n    <div>\r\n      <button>Submit</button>\r\n      <button>Cancel</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<AccessibleName />)","type":"code","id":"7fa1u"},{"content":"test('can select by accessible name', () => {\r\n  render(<AccessibleName />)\r\n\r\n  const submitButton = screen.getByRole('button', {\r\n    name: /submit/i\r\n  })\r\n  const cancelButton = screen.getByRole('button', {\r\n    name: /cancel/i\r\n  })\r\n\r\n  expect(submitButton).toBeInTheDocument()\r\n  expect(cancelButton).toBeInTheDocument()\r\n})","type":"code","id":"n21cl"},{"content":"function MoreNames() {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input id=\"email\" />\r\n\r\n      <label htmlFor=\"search\">Search</label>\r\n      <input id=\"search\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<MoreNames />)","type":"code","id":"0775f"},{"content":"test('show an email and search input', () => {\r\n  render(<MoreNames />)\r\n  const emailInput = screen.getByRole('textbox', {\r\n    name: /email/i\r\n  })\r\n\r\n   const searchInput = screen.getByRole('textbox', {\r\n    name: /search/i\r\n  })\r\n\r\n  expect(emailInput).toBeInTheDocument()\r\n  expect(searchInput).toBeInTheDocument()\r\n})","type":"code","id":"kifft"},{"content":"function IconButtons() {\r\n  return (\r\n    <div>\r\n      <button aria-label=\"sign in\">\r\n        <svg />\r\n      </button>\r\n\r\n      <button aria-label=\"sign up\">\r\n        <svg />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<IconButtons />)","type":"code","id":"kfh52"},{"content":"test('find elements based on label', () => {\r\n  render(<IconButtons />)\r\n\r\n  const buttonOne = screen.getByRole('button', {\r\n    name: /sign in/i\r\n  })\r\n\r\n  const buttonTwo = screen.getByRole('button', {\r\n    name: /sign up/i\r\n  })\r\n\r\n  expect(buttonOne).toBeInTheDocument()\r\n  expect(buttonTwo).toBeInTheDocument()\r\n})","type":"code","id":"ave6k"}]